# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# colors:
# class                 border  backgr. text    indicator child_border
client.focused          #4D995E #29783B #ffffff #2e9ef4   #29783B
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

set $mod Mod4
set $modalt Mod1
set $terminal xfce4-terminal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:DejaVu Sans Mono Bold 12
# font -*-terminus-medium-*-*-*-18-*-*-*-*-*-*-*
# font pango:xos4 Terminus Regular 14
# font pango:TerminessTTF Nerd Font Bold 16

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 12

# GAPS MMMMMMMMMMMMM
gaps inner 5
gaps outer 10
smart_gaps on

exec setxkbmap gb

# Set screen resolutions
# exec xrandr --output eDP1 --off --output HDMI1 --primary

# Start conky
# exec conky
# exec conky -c ~/.config/conky/conky-mpd.conf

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec xss-lock --transfer-sleep-lock -- i3lock -c 000000 --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec nm-applet

# Start xsettingsd
exec xsettingsd -c ~/.xsettingsd-twm

# Start compositor
exec picom -b

# Restore wallpaper
# exec nitrogen --restore

# Set wallpaper
exec nitrogen --set-auto ~/Git/wallpapers/0238.jpg

# Volume icon
exec volumeicon

# Mouse bindings
# The right button toggles floating
# bindsym button3 floating toggle

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pamixer -i 5
bindsym XF86AudioLowerVolume exec --no-startup-id pamixer -d 5
bindsym XF86AudioMute exec --no-startup-id pamixer -t
bindsym XF86AudioMicMute exec --no-startup-id pamixer -t

# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $terminal

# start Editor
# bindsym $mod+e exec emacs
bindsym $mod+e exec /home/yaslam/stuff/vim-select-file.sh

# kill focused window
bindsym $mod+x kill

# start dmenu (a program launcher)
set $dmenu dmenu_run -fn "DejaVu Sans Mono:style=Regular:size=14" -nb "#000000" -sb "#29783B" 
bindsym $mod+d exec --no-startup-id $dmenu
# A more modern dmenu replacement is rofi:
bindsym $mod+p exec "rofi -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

bindsym $mod+BackSpace exec "i3lock -c 000000"

# Media player controls
# bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioStop exec playerctl stop

# Brightness controls
bindsym XF86MonBrightnessUp exec "light -A 2"
bindsym XF86MonBrightnessDown exec "light -U 2"

# Marking windows
# read 1 character and mark the current window with this character
bindsym $mod+m exec i3-input -f "-xos4-terminus-bold-*-normal-*-20-*-*-*-*-*-*-*" -F 'mark %s' -l 1 -P 'Mark: '

# read 1 character and go to the window with the character
# bindsym $mod+g exec i3-input -f "-xos4-terminus-bold-*-normal-*-20-*-*-*-*-*-*-*" -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '

bindsym $mod+g exec i3-goto-mark

# unmark focused window
bindsym $mod+u unmark

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+$modalt+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+s layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Automatically put workspaces on specific screens
# workspace 1 output HDMI-1
# workspace 1 output primary

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+q exec "i3-nagbar -f '-xos4-terminus-bold-*-normal-*-20-*-*-*-*-*-*-*' -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	output DisplayPort-1
	tray_output *
	tray_padding 0
	position bottom
        status_command i3status --config ~/.config/i3status/config
	colors {
		background #000000

		# <colorclass> <border> <background> <text>
		focused_workspace #4D995E #29783B #FFFFFF
	}	
}
